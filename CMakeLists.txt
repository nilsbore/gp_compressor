set(CMAKE_CXX_FLAGS "-O4 -g -fPIC -std=c++0x")
set(EXECUTABLE_OUTPUT_PATH ${PROJECT_SOURCE_DIR}/bin)
set(LIBRARY_OUTPUT_PATH ${PROJECT_SOURCE_DIR}/lib)

set(PCL_DIR "/opt/ros/groovy/share/pcl-1.6")
find_package(PCL 1.6 REQUIRED)
include_directories(${PCL_INCLUDE_DIRS})
link_directories(${PCL_LIBRARY_DIRS})
add_definitions(${PCL_DEFINITIONS})

add_library(pointcloud_compressor src/pointcloud_compressor.cpp)
add_library(gp_compressor src/gp_compressor.cpp)
add_library(sparse_gp src/sparse_gp.cpp)
add_library(pointcloud_decompressor src/pointcloud_decompressor.cpp)
add_library(orthogonal_matching_pursuit src/orthogonal_matching_pursuit.cpp)
add_library(ksvd_decomposition src/ksvd_decomposition.cpp)
add_library(dictionary_representation src/dictionary_representation.cpp)
add_library(gaussian_process src/gaussian_process.cpp)
add_library(gp_leaf src/gp_leaf.cpp)
add_library(gp_octree src/gp_octree.cpp)
add_library(gp_registration src/gp_registration.cpp)
add_library(asynch_visualizer src/asynch_visualizer.cpp)
add_executable(test_compress src/test_compress.cpp)
add_executable(test_gp_compress src/test_gp_compress.cpp)
add_executable(test_gp_registration src/test_gp_registration.cpp)
add_executable(test_decompress src/test_decompress.cpp)

target_link_libraries(gp_octree gp_leaf ${PCL_LIBRARIES})
target_link_libraries(dictionary_representation ${PCL_LIBRARIES})
target_link_libraries(ksvd_decomposition orthogonal_matching_pursuit)
target_link_libraries(asynch_visualizer ${PCL_LIBRARIES})
target_link_libraries(gp_compressor gp_octree sparse_gp gaussian_process dictionary_representation ${PCL_LIBRARIES})
target_link_libraries(gp_registration gp_compressor asynch_visualizer ${PCL_LIBRARIES})
target_link_libraries(pointcloud_compressor ksvd_decomposition dictionary_representation ${PCL_LIBRARIES})
target_link_libraries(pointcloud_decompressor dictionary_representation ${PCL_LIBRARIES})
target_link_libraries(test_compress pointcloud_compressor ${PCL_LIBRARIES})
target_link_libraries(test_gp_compress gp_compressor ${PCL_LIBRARIES})
target_link_libraries(test_gp_registration gp_registration ${PCL_LIBRARIES})
target_link_libraries(test_decompress pointcloud_decompressor ${PCL_LIBRARIES})
